notes:
---------------------------------------------

what type of guarantees
-confidentiality
>message secrecy
-data integrity
>message consistency
-authentication
>identify confirmation
-authorization
>specifying access rights

digital signature
-an electronioc stap

steps for generating a digital signature
generate a message digest
-is a summary of the message we are going to transmit
-message digest is created using hashing algorithms
create a digital signature
-encryption using the private key
-the resulting digest is the digital signature

reciever:
recover the message digest 
use public key to obtain message digest generated by sender
generate the message digest
-use the same digest algorithm to generate mesage digest
compare digests, one sent by sender and one generated
-if not same, was tampered
the senders public key decrypts the message 

detached signature
can be either attached to the message or detached

gnerate a key pair with the gnu privacy guards commands 
gpg --gen key
export public key in ascii format into hw-pubkey.asc
gpg --armor --output hw-pubkey.asc ppex[prt 'your name'
make a tarball with above files + log.txt 
tar -cf hw.tar <files>
gzip hw.tar

use private key you created to make a detached signature
gpg --armor --output hw.tar.gz.sig --detach-sign hw.tar.gz

note: I used 
find / > /dev/null 
to sped up the process of generating a key
---------------------------------------------

1)

Well, if the other team is observing all the bytes going across the network,
it is still secure because the bytes are random and encrypted, so it would
only look like trash bytes to them. if(1), then it wouldn't be secure since
the other team will have access to what I typed in as a passphrase,
with the passphrase they can access the private key stored in the ssh agent 
which means

2)
gpg --vertify can only verify that the document was unmodified. when the 
message is sent, and the message digest is decrypted the reciever also produces
another message digest using the same digest algorithm and compare to validate
the message. It doesn't check whether the sender is the one you want it
to be from, only the message was transmitted safely. You need some extra
verication that checks whether the sender is legitimate, which can be
checked using the digital signature of the sender
